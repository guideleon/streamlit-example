# -*- coding: utf-8 -*-
"""run_model.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nf1w1Znt1hOZGFIp5HmrH77oCKotHlUa
"""

import pandas as pd
import numpy as np
from numpy import *
import pickle
model=pickle.load(open('model.pkl', 'rb'))

def capturar_entrada():

    st.title("Ingrese los datos para hacer la predicción")

    Temperature = st.number_input("Ingrese la Temperatura")
    Fuel_Price = st.number_input("Ingrese el Precio del Combustible")
    CPI = st.number_input("Ingrese el CPI")
    Unemployment = st.number_input("Ingrese la Tasa de Desempleo")
    Size = st.number_input("Ingrese el Tamaño de la tienda")
    Store = st.selectbox("Seleccione el Código de la Tienda", list(range(1, 46)))
    Date = st.date_input("Seleccione la Fecha")
    IsHoliday_True = st.checkbox("¿Es día festivo?")

    datos_entrada = pd.DataFrame([{
        'Temperature': Temperature,
        'Fuel_Price': Fuel_Price,
        'CPI': CPI,
        'Unemployment': Unemployment,
        'Store': Store,
        'Size': Size,
        'Date': Date,
        'IsHoliday_True': IsHoliday_True
    }])

    return datos_entrada

data_usuario = capturar_entrada()

# Crear columnas para one-hot encoding
for i in range(1, 46):  # Para 45 tiendas
    data_usuario[f'Store_{i}'] = 0  # Inicializar todas las columnas como 0

# Establecer la columna correspondiente al valor de 'Store' como 1
# Asegúrate de que 'Store' está en el DataFrame y contiene valores válidos
if 'Store' in data_usuario.columns:
    for index, row in data_usuario.iterrows():
        if 1 <= row['Store'] <= 45:
            data_usuario.at[index, f'Store_{row["Store"]}'] = 1

# Extraer características de la fecha
data_usuario['Date'] = pd.to_datetime(data_usuario['Date'])

# Añadir columnas para cada mes
for i in range(1, 13):  # Para todos los meses
    data_usuario[f'Month_{i}'] = (data_usuario['Date'].dt.month == i).astype(int)

data_usuario['Primera_quincena'] = (data_usuario['Date'].dt.day <= 15).astype(int)

# Eliminar columnas que ya no son necesarias
data_usuario.drop(['Store', 'Date'], axis=1, inplace=True)

# Asegúrate de que el orden de las columnas sea el correcto
columnas_modelo = [
    'IsHoliday_True',
    # Las columnas de las tiendas se añadirán aquí...
    'Month_1', 'Month_2', 'Month_3', 'Month_4', 'Month_5', 'Month_6', 'Month_7', 'Month_8',
    'Month_9', 'Month_10', 'Month_11', 'Month_12', 'Primera_quincena',
    'Temperature', 'Fuel_Price', 'CPI', 'Unemployment', 'Size'
]

# Añadir columnas de tiendas
columnas_tiendas = [f'Store_{i}' for i in range(1, 46)]  # Genera Store_1 hasta Store_45

# Insertar las columnas de tiendas en la posición correcta
posicion_insercion = 1  # Después de 'IsHoliday_True'
for columna in columnas_tiendas:
    columnas_modelo.insert(posicion_insercion, columna)
    posicion_insercion += 1


input = data_usuario[columnas_modelo]

Prediccion = model.predict(input)
Prediccion_str = str(Prediccion).strip('[]')

Prediccion_str_con_separador = "{:,}".format(float(Prediccion_str))
print("Las ventas para las condiciones especificadas serán: ${} dólares".format(Prediccion_str_con_separador))

